on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Production
    permissions:
      contents: read
      id-token: write
    name: Build and deploy to Azure

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set image tags and registry
        run: |
          echo "ACR_LOGIN_SERVER=${{ secrets.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io" >> $GITHUB_ENV
          echo "IMAGE_NAME=ingeniumuahubdpu" >> $GITHUB_ENV
          echo "ACR_IMAGE=${{ secrets.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io/ingeniumuahubdpu:${{ github.sha }}" >> $GITHUB_ENV
          echo "ACR_LATEST=${{ secrets.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io/ingeniumuahubdpu:latest" >> $GITHUB_ENV

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Azure Container Registry via Azure CLI
        run: az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY_NAME }}

      - name: Build and push image to ACR
        uses: docker/build-push-action@v2
        with:
          context: dpu
          file: dpu/Dockerfile
          build-args: ENVIRONMENT=production
          push: true
          tags: |
            ${{ env.ACR_IMAGE }}
            ${{ env.ACR_LATEST }}

      - name: Deploy to Azure Container App from ACR
        uses: azure/container-apps-deploy-action@v1
        with:
          containerAppName: ${{ vars.AZURE_CONTAINER_APP_DPU_NAME }}
          resourceGroup: ${{ vars.AZURE_RESOURCE_GROUP }}
          imageToDeploy: ${{ env.ACR_IMAGE }}
